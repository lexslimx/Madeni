@page "/incomes"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Madeni.Shared;
@using Madeni.Shared.Dtos
@using System.Globalization
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject HttpClient Http

<PageTitle>Incomes</PageTitle>

<h4>Incomes</h4>

@if (IncomeDtos == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-1">
            <a href="addincome" class="btn-outline-dark btn-sm">
                <span class="oi oi-plus text-success" title="add" aria-hidden="true"></span>
            </a>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Date</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var incomeDto in IncomeDtos)
            {
                <tr>
                    <td>@incomeDto.Name</td>
                    <td>@incomeDto.Date.ToString("dd/MM/yyyy")</td>
                    <td>@incomeDto.Amount</td>
                </tr>
            }
        </tbody>
        <tfoot>
            Total : @IncomeDtos.Sum(i => i.Amount).ToString("C", CultureInfo.CreateSpecificCulture("en-KE"))
        </tfoot>
    </table>
}

@code {
    private IncomeDto[]? IncomeDtos;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;
            var userId = user.Claims.Where(x => x.Type == "sub").Select(x => x.Value).FirstOrDefault();
            IncomeDtos = await Http.GetFromJsonAsync<IncomeDto[]>("/api/Incomes?userId=" + userId);
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}
